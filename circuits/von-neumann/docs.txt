#Operationen

0000 ld -adr/val-   --> Lade den Wert in den Akku.
0001 st -adr-       --> Speichere Wert in Akku an der Adresse adr.
0010 in -adr-       --> Schreibe den Wert des Eingaberegisters an die Adresse adr.
0011 out -adr/val-  --> Schreibe den Wert ins Ausgaberegister.
0100 add -adr/val-  --> Addiere den Wert mit dem Wert im Akku, neuer Wert im result register gespeichert.
0101 sub -adr/val-  --> Addiere den Wert vom dem Wert im Akku, neuer Wert im result register gespeichert.
0110 cmp -adr/val-  --> Vergleiche den Wert mit dem Akku-Wert, neuer Wert im result register gespeichert.
0111 psh -0-        --> Schiebe den Wert im result-register in den Akku. (Normalerweise immer nach add, sub, cmp)
1000 and -adr/val-
1001 or  -adr/val-
1010 not -adr/val-

1011 jlt -line-     --> Wenn bei cmp Wert kleiner als Akku-Wert, springe an angegebene Befehlszelle.
1100 jgt -line-     --> Wenn bei cmp Wert größer als Akku-Wert, springe an angegebene Befehlszelle.
1101 jeq -line-     --> Wenn bei cmp Wert gleich dem Akku-Wert, springe an angegebene Befehlszelle.
1110 jmp -line-     --> Springe an angegebene Befehlszelle.
1111 end            --> Beende Programm.

v/a: 1/0

-----------Testprogramme------------

#-1-------------------------

ld 0, 0
add 1, 1
psh
st 0
cmp 4
jgt 0

0000 0 00000000
0100 1 00000001
0111 0 00000000
0001 0 00000000
0110 1 00000100
1100 1 00000000
